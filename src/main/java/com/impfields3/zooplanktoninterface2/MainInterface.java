/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.impfields3.zooplanktoninterface2;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import java.awt.*;
import java.io.IOException;

/**
 *
 * @author impfi
 */
public class MainInterface extends javax.swing.JFrame {

    private boolean isCsv = false;
    private String ex;
    private String sx;
    private String st;
    private String gx;
    private String pathtocsvfile;
    private String alpha,gamma,beta,sigma;
   
    /**
     * Creates new form MainInterface
     */
    public MainInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pathToCsv = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        ExLabel = new javax.swing.JLabel();
        Ex = new javax.swing.JTextField();
        SxLabel = new javax.swing.JLabel();
        Sx = new javax.swing.JTextField();
        StLabel = new javax.swing.JLabel();
        St = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Gx = new javax.swing.JTextField();
        AlphaLabel = new javax.swing.JLabel();
        Alpha = new javax.swing.JTextField();
        GammaLabel = new javax.swing.JLabel();
        Gamma = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Beta = new javax.swing.JTextField();
        SigmaLabel = new javax.swing.JLabel();
        Sigma = new javax.swing.JTextField();
        Run = new javax.swing.JButton();
        result = new javax.swing.JTextField();
        ExPanel = new javax.swing.JPanel();
        GxPanel = new javax.swing.JPanel();
        SxPanel = new javax.swing.JPanel();
        StPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        Ex.setText("1.0*(x+90)");
        Sx.setText("3.0*(x+90)");
        St.setText("cos(2*pi*t)+1");
        Gx.setText("-1.0*(x+90/2)^2");
        Alpha.setText("20.0");
        Gamma.setText("17.0");
        Beta.setText("0.02");
        Sigma.setText("0.1");
        pathToCsv.setText("Enter path to csv");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Submit path");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ExLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ExLabel.setText("Enter Ex");

        SxLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SxLabel.setText("Enter Sx");

        StLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StLabel.setText("Enter St");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Enter Gx");

        AlphaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AlphaLabel.setText("Alpha");

        GammaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GammaLabel.setText("Gamma");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Beta");

        SigmaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SigmaLabel.setText("Sigma");

        Run.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Run.setText("Run");
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    RunActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        result.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        result.setText("Here you wiil see result");

        javax.swing.GroupLayout ExPanelLayout = new javax.swing.GroupLayout(ExPanel);
        ExPanel.setLayout(ExPanelLayout);
        ExPanelLayout.setHorizontalGroup(
            ExPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );
        ExPanelLayout.setVerticalGroup(
            ExPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GxPanelLayout = new javax.swing.GroupLayout(GxPanel);
        GxPanel.setLayout(GxPanelLayout);
        GxPanelLayout.setHorizontalGroup(
            GxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );
        GxPanelLayout.setVerticalGroup(
            GxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout SxPanelLayout = new javax.swing.GroupLayout(SxPanel);
        SxPanel.setLayout(SxPanelLayout);
        SxPanelLayout.setHorizontalGroup(
            SxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        SxPanelLayout.setVerticalGroup(
            SxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 307, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout StPanelLayout = new javax.swing.GroupLayout(StPanel);
        StPanel.setLayout(StPanelLayout);
        StPanelLayout.setHorizontalGroup(
            StPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        StPanelLayout.setVerticalGroup(
            StPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Run, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Gx)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(St)
                                .addComponent(StLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Sx)
                                .addComponent(SxLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Ex)
                                .addComponent(ExLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(pathToCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(AlphaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Alpha)
                                    .addComponent(Beta))
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(GammaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Gamma, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SigmaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Sigma, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(SxPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(ExPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GxPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(pathToCsv))
                        .addGap(18, 18, 18)
                        .addComponent(ExLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ex, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Sx, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(St, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Gx, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AlphaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GammaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Alpha, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(Gamma))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SigmaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Beta, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(Sigma)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ExPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        isCsv = true;
        pathtocsvfile = pathToCsv.getText();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RunActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_RunActionPerformed
        // TODO add your handling code here:
       if (isCsv == true){
           CsvReader csvReader = new CsvReader();
           Double alphaD = 0.0;
           Double gammaD = 0.0;
           Double betaD = 0.0;
           Double sigmaD = 0.0;
           GraphicsList gl = csvReader.read(pathtocsvfile,alphaD,gammaD,betaD,sigmaD);
           XYSeries ExGraphicJ = new XYSeries("Ex");
           XYSeries GxGraphicJ = new XYSeries("Gx");
           XYSeries SxGraphicJ = new XYSeries("Sx");
           XYSeries StGraphicJ = new XYSeries("St");
           for (int i = 0; i<100; i++){
               Point p = gl.getExList().get(i);
               ExGraphicJ.add(p.getX(),p.getY());
               p = gl.getGxList().get(i);
               GxGraphicJ.add(p.getX(),p.getY());
               p = gl.getSxlist().get(i);
               SxGraphicJ.add(p.getX(),p.getY());
               p = gl.getStList().get(i);
               StGraphicJ.add(p.getX(),p.getY());
           }

           XYSeriesCollection dataset = new XYSeriesCollection();
           dataset.addSeries(ExGraphicJ);
           JFreeChart chart = ChartFactory.createXYLineChart("Ex",
                   "X","E",dataset, PlotOrientation.VERTICAL,true, // Show Legend
                   true, // Use tooltips
                   false );
           ExPanel.setLayout(new java.awt.BorderLayout());
           ChartPanel CP = new ChartPanel(chart);
           ExPanel.add(CP, BorderLayout.CENTER);
           ExPanel.validate();
           DataNormalizer dn = new DataNormalizer();
           GraphicsListNormalized gln = dn.normalize(gl);
           String resultString;
           NeuralNetwork net = new NeuralNetwork();
           resultString = net.predict(gln,alphaD,gammaD,betaD,sigmaD);
           result.setText(resultString);
       }
       else{
           ex = Ex.getText();
           sx = Sx.getText();
           st = St.getText();
           gx = Gx.getText();
           alpha = Alpha.getText();
           gamma = Gamma.getText();
           beta = Beta.getText();
           sigma = Sigma.getText();
           double alphaD = Double.parseDouble(alpha);
           double gammaD = Double.parseDouble(gamma);
           double betaD = Double.parseDouble(beta);
           double sigmaD = Double.parseDouble(sigma);
           GraphicsList gl = new GraphicsList();
           NeuralNetwork net = new NeuralNetwork();
           DataNormalizer dn = new DataNormalizer();
           GraphicsListNormalized gln;
           String resultString = "ответа не получено";
           if((ex != "")&&(sx != "")&&(st != "")&&(gx != "")){
               Parser parser = new Parser();
               gl = parser.parseFunctions(ex,sx,st,gx);
               XYSeries ExGraphicJ = new XYSeries("Ex");
               XYSeries GxGraphicJ = new XYSeries("Gx");
               XYSeries SxGraphicJ = new XYSeries("Sx");
               XYSeries StGraphicJ = new XYSeries("St");
               for (int i = 0; i<100; i++){
                   Point p = gl.getExList().get(i);
                   ExGraphicJ.add(p.getX(),p.getY());
                   p = gl.getGxList().get(i);
                   GxGraphicJ.add(p.getX(),p.getY());
                   p = gl.getSxlist().get(i);
                   SxGraphicJ.add(p.getX(),p.getY());
                   p = gl.getStList().get(i);
                   StGraphicJ.add(p.getX(),p.getY());
               }

               XYSeriesCollection datasetEx = new XYSeriesCollection();
               XYSeriesCollection datasetGx = new XYSeriesCollection();
               XYSeriesCollection datasetSx = new XYSeriesCollection();
               XYSeriesCollection datasetSt = new XYSeriesCollection();


               datasetEx.addSeries(ExGraphicJ);
               datasetGx.addSeries(GxGraphicJ);
               datasetSx.addSeries(SxGraphicJ);
               datasetSt.addSeries(StGraphicJ);

               JFreeChart chartEx = ChartFactory.createXYLineChart("Ex",
                       "X","E",datasetEx, PlotOrientation.VERTICAL,true, // Show Legend
                       true, // Use tooltips
                       false );
               ExPanel.setLayout(new java.awt.BorderLayout());
               ChartPanel CPEx = new ChartPanel(chartEx);
               ExPanel.add(CPEx, BorderLayout.CENTER);
               ExPanel.validate();

               JFreeChart chartGx = ChartFactory.createXYLineChart("Gx",
                       "X","G",datasetGx, PlotOrientation.VERTICAL,true, // Show Legend
                       true, // Use tooltips
                       false );
               GxPanel.setLayout(new java.awt.BorderLayout());
               ChartPanel CPGx = new ChartPanel(chartGx);
               GxPanel.add(CPGx, BorderLayout.CENTER);
               GxPanel.validate();

               JFreeChart chartSx = ChartFactory.createXYLineChart("Sx",
                       "X","S",datasetSx, PlotOrientation.VERTICAL,true, // Show Legend
                       true, // Use tooltips
                       false );
               SxPanel.setLayout(new java.awt.BorderLayout());
               ChartPanel CPSx = new ChartPanel(chartSx);
               SxPanel.add(CPSx, BorderLayout.CENTER);
               SxPanel.validate();


               JFreeChart chartSt = ChartFactory.createXYLineChart("St",
                       "X","S",datasetSt, PlotOrientation.VERTICAL,true, // Show Legend
                       true, // Use tooltips
                       false );
               StPanel.setLayout(new java.awt.BorderLayout());
               ChartPanel CPSt = new ChartPanel(chartSt);
               StPanel.add(CPSt, BorderLayout.CENTER);
               StPanel.validate();
               gln = dn.normalize(gl);
               resultString = net.predict(gln,alphaD,gammaD,betaD,sigmaD);
           }

           result.setText(resultString);

           
       }
    }//GEN-LAST:event_RunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Alpha;
    private javax.swing.JLabel AlphaLabel;
    private javax.swing.JTextField Beta;
    private javax.swing.JTextField Ex;
    private javax.swing.JLabel ExLabel;
    private javax.swing.JPanel ExPanel;
    private javax.swing.JTextField Gamma;
    private javax.swing.JLabel GammaLabel;
    private javax.swing.JTextField Gx;
    private javax.swing.JPanel GxPanel;
    private javax.swing.JButton Run;
    private javax.swing.JTextField Sigma;
    private javax.swing.JLabel SigmaLabel;
    private javax.swing.JTextField St;
    private javax.swing.JLabel StLabel;
    private javax.swing.JPanel StPanel;
    private javax.swing.JTextField Sx;
    private javax.swing.JLabel SxLabel;
    private javax.swing.JPanel SxPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField pathToCsv;
    private javax.swing.JTextField result;
    // End of variables declaration//GEN-END:variables
}
